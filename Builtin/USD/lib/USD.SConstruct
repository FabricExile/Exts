##############################################################################
##############################################################################
##
## Automatically generated by KLUDGE
## *** DO NOT EDIT ***
##
##############################################################################
##############################################################################

import os, sys

extname = 'USD'
basename = 'USD'

try:
  fabricPath = os.environ['FABRIC_DIR']
except:
  print "You must set FABRIC_DIR in your environment."
  print "Refer to README.txt for more information."
  sys.exit(1)
SConscript(os.path.join(fabricPath, 'Samples', 'EDK', 'SConscript'))
Import('fabricBuildEnv')

if os.environ.get('CC'):
  fabricBuildEnv['CC'] = os.environ.get('CC')
if os.environ.get('CXX'):
  fabricBuildEnv['CXX'] = os.environ.get('CXX')
fabricBuildEnv.Append(CPPFLAGS = ['/wd4005'])
fabricBuildEnv.Append(CPPFLAGS = ['/wd4065'])
fabricBuildEnv.Append(CPPFLAGS = ['/wd4244'])
fabricBuildEnv.Append(CPPFLAGS = ['/wd4267'])
fabricBuildEnv.Append(CPPFLAGS = ['/wd4305'])
fabricBuildEnv.Append(CPPFLAGS = ['/wd4605'])
fabricBuildEnv.Append(CPPFLAGS = ['/MP8'])
fabricBuildEnv.Append(CPPFLAGS = ['/bigobj'])
fabricBuildEnv.Append(CPPFLAGS = ['/DWIN32 /D_WINDOWS /GR /EHsc /MT /O2 /Ob2 /D NDEBUG'])
fabricBuildEnv.Append(CPPDEFINES = ['BUILD_COMPONENT_SRC_PREFIX=\\"pxr/\\"'])
fabricBuildEnv.Append(CPPDEFINES = ['BUILD_OPTLEVEL_OPT'])
fabricBuildEnv.Append(CPPDEFINES = ['NOMINMAX'])
fabricBuildEnv.Append(CPPDEFINES = ['TF_NO_GNU_EXT'])
fabricBuildEnv.Append(CPPDEFINES = ['YY_NO_UNISTD_H'])
fabricBuildEnv.Append(CPPDEFINES = ['BOOST_ALL_NO_LIB'])

if fabricBuildEnv['FABRIC_BUILD_OS'] in ['Darwin', 'Linux']:
  fabricBuildEnv.Append(RPATH = fabricBuildEnv.Literal(os.path.join('\\$$ORIGIN')))

if os.environ.get('CPPPATH'):
  fabricBuildEnv.Append(CPPPATH = os.environ.get('CPPPATH').split(os.pathsep))
if os.environ.get('LIBPATH'):
  fabricBuildEnv.Append(LIBPATH = os.environ.get('LIBPATH').split(os.pathsep))
fabricBuildEnv.Append(CPPPATH = [r'C:/Users/build/autobuilder/buildbot/build-win10-2/custom-windows/build/ThirdParty/PreBuilt/Windows/x86_64/usd-deps/stage/include'])
fabricBuildEnv.Append(CPPPATH = [r'C:/Users/build/autobuilder/buildbot/build-win10-2/custom-windows/build/ThirdParty/PreBuilt/Windows/x86_64/usd-deps/stage/include/USD'])
fabricBuildEnv.Append(CPPPATH = [r'C:/Users/build/autobuilder/buildbot/build-win10-2/custom-windows/build/ThirdParty/PreBuilt/Windows/x86_64/usd-deps/stage/include/ilmbase'])
fabricBuildEnv.Append(CPPPATH = [r'C:/Users/build/autobuilder/buildbot/build-win10-2/custom-windows/build/ThirdParty/PreBuilt/Windows/x86_64/usd-deps/stage/include/ilmbase/half'])
fabricBuildEnv.Append(CPPPATH = [r'C:/Users/build/autobuilder/buildbot/build-win10-2/custom-windows/build/ThirdParty/PreBuilt/Windows/x86_64/usd-deps/stage/include/tbb'])
fabricBuildEnv.Append(CPPPATH = [r'c:\Python27\include'])
fabricBuildEnv.Append(LIBPATH = [r'C:/Users/build/autobuilder/buildbot/build-win10-2/custom-windows/build/ThirdParty/PreBuilt/Windows/x86_64/usd-deps/stage/lib'])
fabricBuildEnv.Append(LIBPATH = [r'c:\Python27\libs'])
fabricBuildEnv.Append(LIBS = [r'boost_python-vc140-mt-1_63'])
fabricBuildEnv.Append(LIBS = [r'arch'])
fabricBuildEnv.Append(LIBS = [r'gf'])
fabricBuildEnv.Append(LIBS = [r'js'])
fabricBuildEnv.Append(LIBS = [r'plug'])
fabricBuildEnv.Append(LIBS = [r'tf'])
fabricBuildEnv.Append(LIBS = [r'tracelite'])
fabricBuildEnv.Append(LIBS = [r'vt'])
fabricBuildEnv.Append(LIBS = [r'work'])
fabricBuildEnv.Append(LIBS = [r'ar'])
fabricBuildEnv.Append(LIBS = [r'kind'])
fabricBuildEnv.Append(LIBS = [r'pcp'])
fabricBuildEnv.Append(LIBS = [r'sdf'])
fabricBuildEnv.Append(LIBS = [r'usd'])
fabricBuildEnv.Append(LIBS = [r'usdGeom'])
fabricBuildEnv.Append(LIBS = [r'usdHydra'])
fabricBuildEnv.Append(LIBS = [r'usdRi'])
fabricBuildEnv.Append(LIBS = [r'usdShade'])
fabricBuildEnv.Append(LIBS = [r'usdUI'])
fabricBuildEnv.Append(LIBS = [r'usdUtils'])

fabricBuildEnv.SharedLibrary(
  '-'.join([extname, fabricBuildEnv['FABRIC_BUILD_OS'], fabricBuildEnv['FABRIC_BUILD_ARCH']]),
  [
    basename + '.cpp',
  ]
  )