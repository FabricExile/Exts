
/*
 *  Copyright (c) 2010-2017 Fabric Software Inc. All rights reserved.
 */

/// \internal
private function Boolean BaseGeometry.getVec2AttributeComponent(
  Vec2Attribute sourceAttr,
  io ScalarAttribute targetAttr,
  UInt32 index
) {
  if(sourceAttr == null || targetAttr == null)
    return false;

  for(Size i=0;i<sourceAttr.size();i++)
    targetAttr.values[i] = sourceAttr.values[i].component(index);

  targetAttr.incrementVersion();
  return true;
}

/// \internal
private function Boolean BaseGeometry.getVec3AttributeComponent(
  Vec3Attribute sourceAttr,
  io ScalarAttribute targetAttr,
  UInt32 index
) {
  if(sourceAttr == null || targetAttr == null)
    return false;

  for(Size i=0;i<sourceAttr.size();i++)
    targetAttr.values[i] = sourceAttr.values[i].component(index);

  targetAttr.incrementVersion();
  return true;
}

/// \internal
private function Boolean BaseGeometry.getVec4AttributeComponent(
  Vec4Attribute sourceAttr,
  io ScalarAttribute targetAttr,
  UInt32 index
) {
  if(sourceAttr == null || targetAttr == null)
    return false;

  for(Size i=0;i<sourceAttr.size();i++)
    targetAttr.values[i] = sourceAttr.values[i].component(index);

  targetAttr.incrementVersion();
  return true;
}

/// \internal
private function Boolean BaseGeometry.getColorAttributeComponent(
  ColorAttribute sourceAttr,
  io ScalarAttribute targetAttr,
  UInt32 index
) {
  if(sourceAttr == null || targetAttr == null)
    return false;

  for(Size i=0;i<sourceAttr.size();i++)
    targetAttr.values[i] = sourceAttr.values[i].component(index);

  targetAttr.incrementVersion();
  return true;
}
