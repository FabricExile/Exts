{
  "objectType" : "Func",
  "metadata" : {
    "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
    "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.7.0/HTML/KLExtensionsGuide/Math/Mat44.html",
    "uiTooltip" : "Decompose the Mat44 into the scaling, rotation and\ntranslation components and return them in the provided io args.\n\n Supported by Mat44"
    },
  "title" : "Decompose[]",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
        },
      "name" : "this",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Mat44[]" : [
          {
            "row0" : {
              "x" : 1,
              "y" : 0,
              "z" : 0,
              "t" : 0
              },
            "row1" : {
              "x" : 0,
              "y" : 1,
              "z" : 0,
              "t" : 0
              },
            "row2" : {
              "x" : 0,
              "y" : 0,
              "z" : 1,
              "t" : 0
              },
            "row3" : {
              "x" : 0,
              "y" : 0,
              "z" : 0,
              "t" : 1
              }
            }
          ]
        },
      "execPortType" : "In",
      "typeSpec" : "Mat44[]"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
        },
      "name" : "scaling",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Vec3[]"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
        },
      "name" : "rotation",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Mat33[]"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
        },
      "name" : "translation",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Vec3[]"
      }
    ],
  "extDeps" : {
    "Math" : "*"
    },
  "presetGUID" : "0D2D022050663C0C6A918C450F3A6719",
  "code" : "require Math;

operator Math_Mat44_decompose_task<<<index>>>(
  in Mat44[] this
, out Vec3[] scaling
, out Mat33[] rotation
, out Vec3[] translation
) {
  this[index < this.size() ? index : this.size() - 1].decompose(scaling[index < scaling.size() ? index : scaling.size() - 1], rotation[index < rotation.size() ? index : rotation.size() - 1], translation[index < translation.size() ? index : translation.size() - 1]);
}

dfgEntry {
  if( this.size() == 0) return;
  if( scaling.size() == 0) return;
  if( rotation.size() == 0) return;
  if( translation.size() == 0) return;
  Size task_size = this.size();
  if(task_size < scaling.size()) task_size = scaling.size();
  scaling.resize(task_size);
  rotation.resize(task_size);
  translation.resize(task_size);
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      Math_Mat44_decompose_task(index, this, scaling, rotation, translation);
    }
  } else {
    Math_Mat44_decompose_task<<<task_size>>>(this, scaling, rotation, translation);
  }
}
"
  }