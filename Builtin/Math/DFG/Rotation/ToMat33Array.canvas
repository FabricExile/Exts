{
  "objectType" : "Func",
  "metadata" : {
    "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
    "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.7.0/HTML/KLExtensionsGuide/Math/Euler.html",
    "uiTooltip" : "Converts the Euler to a Mat33 representing\nthe same 3D rotation transformation\n\n Supported by Euler,Quat"
    },
  "title" : "ToMat33[]",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "name" : "this",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Euler[]" : [
          {
            "x" : 0,
            "y" : 0,
            "z" : 0,
            "ro" : {
              "order" : 0
              }
            }
          ]
        },
      "execPortType" : "In",
      "typeSpec" : "$TYPE$[]"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
        },
      "name" : "result",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Mat33[]"
      }
    ],
  "extDeps" : {
    "Math" : "*"
    },
  "presetGUID" : "31F434A190B301FE5EF2C691A021F5F7",
  "code" : "require Math;

operator Math_Euler_toMat33_task<<<index>>>(
  io Mat33[] result
, in $TYPE$[] this
) {
  result[index] = this[index < this.size() ? index : this.size() - 1].toMat33();
}

dfgEntry {
  if( this.size() == 0) return;
  Size task_size = this.size();
  result.resize(task_size);
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      Math_Euler_toMat33_task(index, result, this);
    }
  } else {
    Math_Euler_toMat33_task<<<task_size>>>(result, this);
  }
}
"
  }