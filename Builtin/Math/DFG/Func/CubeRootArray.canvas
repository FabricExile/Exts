{
  "objectType" : "Func",
  "metadata" : {
    "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
    "uiTooltip" : "Returns the cube root of the given value.\n\n Supported by Float64"
    },
  "title" : "CubeRoot[]",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "name" : "v",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Float64[]" : [
          0
          ]
        },
      "execPortType" : "In",
      "typeSpec" : "Float64[]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "result",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Float64[]"
      }
    ],
  "extDeps" : {
    "Math" : "*"
    },
  "presetGUID" : "5D454596B1DAAADF5EE181B1857EBF41",
  "code" : "require Math;

operator Math_cbrt_task<<<index>>>(
  io Float64[] result
, in Float64[] v
) {
  result[index] = cbrt(v[index < v.size() ? index : v.size() - 1]);
}

dfgEntry {
  if( v.size() == 0) return;
  Size task_size = 0;
  if(task_size < v.size()) task_size = v.size();
  result.resize(task_size);
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      Math_cbrt_task(index, result, v);
    }
  } else {
    Math_cbrt_task<<<task_size>>>(result, v);
  }
}
"
  }