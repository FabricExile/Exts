{
  "objectType" : "Func",
  "metadata" : {
    "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
    "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.7.0/HTML/KLExtensionsGuide/Math/Color.html",
    "uiTooltip" : "Returns true if both colors match to a given precision\n\n Supported by Color"
    },
  "title" : "AlmostEqual[]",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
        },
      "name" : "this",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Color[]" : [
          {
            "r" : 0,
            "g" : 0,
            "b" : 0,
            "a" : 1
            }
          ]
        },
      "execPortType" : "In",
      "typeSpec" : "Color[]"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
        },
      "name" : "other",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Color[]" : [
          {
            "r" : 0,
            "g" : 0,
            "b" : 0,
            "a" : 1
            }
          ]
        },
      "execPortType" : "In",
      "typeSpec" : "Color[]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "precision",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Scalar[]" : [
          0
          ]
        },
      "execPortType" : "In",
      "typeSpec" : "Scalar[]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "result",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Boolean[]"
      }
    ],
  "extDeps" : {
    "Math" : "*"
    },
  "presetGUID" : "4494918C3EAAAA8AF853ECE3A6A5EEF3",
  "code" : "require Math;

operator Math_Color_almostEqual_task<<<index>>>(
  io Boolean[] result
, in Color[] this
, in Color[] other
, in Scalar[] precision
) {
  result[index] = this[index < this.size() ? index : this.size() - 1].almostEqual(other[index < other.size() ? index : other.size() - 1], precision[index < precision.size() ? index : precision.size() - 1]);
}

dfgEntry {
  if( this.size() == 0) return;
  if( other.size() == 0) return;
  if( precision.size() == 0) return;
  Size task_size = this.size();
  if(task_size < other.size()) task_size = other.size();
  if(task_size < precision.size()) task_size = precision.size();
  result.resize(task_size);
  if(task_size < 10000 /* pex margin */) {
    for(Size index = 0; index < task_size; index++) {
      Math_Color_almostEqual_task(index, result, this, other, precision);
    }
  } else {
    Math_Color_almostEqual_task<<<task_size>>>(result, this, other, precision);
  }
}
"
  }