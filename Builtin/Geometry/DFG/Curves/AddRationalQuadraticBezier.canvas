{
  "objectType" : "Func",
  "metadata" : {
    "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.7.0/HTML/KLExtensionsGuide/Geometry/Curves.html",
    "uiTooltip" : "Adds a quadratic bezier curve, and returns the added Curve.\nIf the curve is closed, pointPositions exclude repeated end point (implicitly point 0).\nSee Curves for more information about various curve types.\n\nSupported types:\n  this: Curves\n  pointPositions: Vec3[]\n  rationalWeights: Float32[]\n  isClosed: Boolean\n  result: Curve\n"
    },
  "title" : "AddRationalQuadraticBezier",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
        },
      "name" : "this",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Curves"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
        },
      "name" : "pointPositions",
      "nodePortType" : "Out",
      "execPortType" : "In",
      "typeSpec" : "Vec3[]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "rationalWeights",
      "nodePortType" : "Out",
      "execPortType" : "In",
      "typeSpec" : "Float32[]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "isClosed",
      "nodePortType" : "Out",
      "execPortType" : "In",
      "typeSpec" : "Boolean"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
        },
      "name" : "result",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Curve"
      }
    ],
  "extDeps" : {
    "Geometry" : "*"
    },
  "presetGUID" : "0E06A33B1E108476650703DD4EFA5AD4",
  "code" : "require Geometry;

dfgEntry {
  result = this.addQuadraticBezier(pointPositions, rationalWeights, isClosed);
}
"
  }