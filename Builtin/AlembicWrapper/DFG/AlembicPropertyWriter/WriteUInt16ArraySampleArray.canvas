{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "stores the value in the property as a UInt16.\n\nSupported types:\n  this: AlembicPropertyWriter\n  values: UInt16[]\n  result: Boolean\n"
    },
  "title" : "WriteUInt16ArraySample[]",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "name" : "this",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "AlembicPropertyWriter[]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "values",
      "nodePortType" : "Out",
      "defaultValues" : {
        "UInt16[][]" : [
          []
          ]
        },
      "execPortType" : "In",
      "typeSpec" : "UInt16[][]"
      },
    {
      "objectType" : "ExecPort",
      "name" : "result",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Boolean[]"
      }
    ],
  "extDeps" : {
    "AlembicWrapper" : "*"
    },
  "presetGUID" : "E0F9B663A634C153C7733A6F4FDAB069",
  "code" : "require AlembicWrapper;

operator AlembicWrapper_AlembicPropertyWriter_writeUInt16ArraySample_task<<<index>>>(
  io Boolean[] result
, io AlembicPropertyWriter[] this
, in UInt16[][] values
) {
  result[index] = this[index < this.size() ? index : this.size() - 1].writeUInt16ArraySample(values[index < values.size() ? index : values.size() - 1]);
}

dfgEntry {
  if( this.size() == 0) return;
  if( values.size() == 0) return;
  Size task_size = this.size();
  if(task_size < values.size()) task_size = values.size();
  result.resize(task_size);
  for(Size index = 0; index < task_size; index++) {
    AlembicWrapper_AlembicPropertyWriter_writeUInt16ArraySample_task(index, result, this, values);
  }
}
"
  }