/*
 *  Copyright (c) 2010-2017 Fabric Software Inc. All rights reserved.
 */

/// stores the value in the property as a Boolean.
function Boolean AlembicPropertyWriter.writeBooleanArraySample!(Boolean values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOBooleanArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOBooleanArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a SInt8.
function Boolean AlembicPropertyWriter.writeSInt8ArraySample!(SInt8 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOSInt8ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOSInt8ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a SInt16.
function Boolean AlembicPropertyWriter.writeSInt16ArraySample!(SInt16 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOSInt16ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOSInt16ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a SInt32.
function Boolean AlembicPropertyWriter.writeSInt32ArraySample!(SInt32 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOSInt32ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOSInt32ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a SInt64.
function Boolean AlembicPropertyWriter.writeSInt64ArraySample!(SInt64 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOSInt64ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOSInt64ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a UInt8.
function Boolean AlembicPropertyWriter.writeUInt8ArraySample!(UInt8 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOUInt8ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOUInt8ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a UInt16.
function Boolean AlembicPropertyWriter.writeUInt16ArraySample!(UInt16 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOUInt16ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOUInt16ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a UInt32.
function Boolean AlembicPropertyWriter.writeUInt32ArraySample!(UInt32 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOUInt32ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOUInt32ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a UInt64.
function Boolean AlembicPropertyWriter.writeUInt64ArraySample!(UInt64 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOUInt64ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOUInt64ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Float32.
function Boolean AlembicPropertyWriter.writeFloat32ArraySample!(Float32 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOFloat32ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOFloat32ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Float64.
function Boolean AlembicPropertyWriter.writeFloat64ArraySample!(Float64 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOFloat64ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    Ref<AlembicOArrayProperty> arrayProp = this.arrayProp;
    specializedProp = AlembicOFloat64ArrayProperty(arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a String.
function Boolean AlembicPropertyWriter.writeStringArraySample!(String values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOStringArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOStringArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Vec2.
function Boolean AlembicPropertyWriter.writeVec2ArraySample!(Vec2 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 2)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOVec2ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOVec2ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Vec3.
function Boolean AlembicPropertyWriter.writeVec3ArraySample!(Vec3 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 3)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOVec3ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOVec3ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Quat.
function Boolean AlembicPropertyWriter.writeQuatArraySample!(Quat values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 2)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOQuatArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOQuatArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Box2.
function Boolean AlembicPropertyWriter.writeBox2ArraySample!(Box2 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 2)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOBox2ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOBox2ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Box3.
function Boolean AlembicPropertyWriter.writeBox3ArraySample!(Box3 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 6)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOBox3ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOBox3ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Mat33.
function Boolean AlembicPropertyWriter.writeMat33ArraySample!(Mat33 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 9)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOMat33ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOMat33ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Mat44.
function Boolean AlembicPropertyWriter.writeMat44ArraySample!(Mat44 values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 16)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOMat44ArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOMat44ArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}

/// stores the value in the property as a Color.
function Boolean AlembicPropertyWriter.writeColorArraySample!(Color values[]) {
  if(this == null)
    return false;
  if(this.arrayProp == null)
    return false;
  if(this.dataType.getExtent() != 4)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOColorArrayProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOColorArrayProperty(this.arrayProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(values);
  return true;
}
