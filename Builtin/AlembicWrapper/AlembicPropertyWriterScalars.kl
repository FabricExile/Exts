/*
 *  Copyright (c) 2010-2017 Fabric Software Inc. All rights reserved.
 */

/// stores the value in the property as a Boolean.
function Boolean AlembicPropertyWriter.writeBooleanSample!(Boolean value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOBooleanProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOBooleanProperty(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a SInt8.
function Boolean AlembicPropertyWriter.writeSInt8Sample!(SInt8 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOSInt8Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOSInt8Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a SInt16.
function Boolean AlembicPropertyWriter.writeSInt16Sample!(SInt16 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOSInt16Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOSInt16Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a SInt32.
function Boolean AlembicPropertyWriter.writeSInt32Sample!(SInt32 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOSInt32Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOSInt32Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a SInt64.
function Boolean AlembicPropertyWriter.writeSInt64Sample!(SInt64 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOSInt64Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOSInt64Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a UInt8.
function Boolean AlembicPropertyWriter.writeUInt8Sample!(UInt8 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOUInt8Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOUInt8Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a UInt16.
function Boolean AlembicPropertyWriter.writeUInt16Sample!(UInt16 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOUInt16Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOUInt16Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a UInt32.
function Boolean AlembicPropertyWriter.writeUInt32Sample!(UInt32 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOUInt32Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOUInt32Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a UInt64.
function Boolean AlembicPropertyWriter.writeUInt64Sample!(UInt64 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOUInt64Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOUInt64Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Float32.
function Boolean AlembicPropertyWriter.writeFloat32Sample!(Float32 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOFloat32Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOFloat32Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Float64.
function Boolean AlembicPropertyWriter.writeFloat64Sample!(Float64 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOFloat64Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOFloat64Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a String.
function Boolean AlembicPropertyWriter.writeStringSample!(String value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 1)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOStringProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOStringProperty(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Vec2.
function Boolean AlembicPropertyWriter.writeVec2Sample!(Vec2 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 2)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOVec2Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOVec2Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Vec3.
function Boolean AlembicPropertyWriter.writeVec3Sample!(Vec3 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 3)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOVec3Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOVec3Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Quat.
function Boolean AlembicPropertyWriter.writeQuatSample!(Quat value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 2)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOQuatProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOQuatProperty(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Box2.
function Boolean AlembicPropertyWriter.writeBox2Sample!(Box2 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 2)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOBox2Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOBox2Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Box3.
function Boolean AlembicPropertyWriter.writeBox3Sample!(Box3 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 6)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOBox3Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOBox3Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Mat33.
function Boolean AlembicPropertyWriter.writeMat33Sample!(Mat33 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 9)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOMat33Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOMat33Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Mat44.
function Boolean AlembicPropertyWriter.writeMat44Sample!(Mat44 value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 16)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOMat44Property specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOMat44Property(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}

/// stores the value in the property as a Color.
function Boolean AlembicPropertyWriter.writeColorSample!(Color value) {
  if(this == null)
    return false;
  if(this.scalarProp == null)
    return false;
  if(this.dataType.getExtent() != 4)
    return false;
  if(this.storedSamples >= this.numSamples)
    return false;

  AlembicOColorProperty specializedProp = this.specializedProp;
  if(specializedProp == null) {
    specializedProp = AlembicOColorProperty(this.scalarProp);
    if(specializedProp == null)
      return false;
    this.specializedProp = specializedProp;
  }

  specializedProp.set(value);  
  return true;
}
