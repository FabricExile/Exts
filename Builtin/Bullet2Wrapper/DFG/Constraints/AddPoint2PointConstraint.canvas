// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "Supported types:\n  this: Bt2World\n  bodyA: Bt2RigidBody\n  bodyB: Bt2RigidBody\n  pivotA: Vec3\n  pivotB: Vec3\n  result: Bt2Constraint\n"
    },
  "title" : "AddPoint2PointConstraint",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "name" : "this",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Bt2World"
      },
    {
      "objectType" : "ExecPort",
      "name" : "bodyA",
      "nodePortType" : "Out",
      "execPortType" : "In",
      "typeSpec" : "Bt2RigidBody"
      },
    {
      "objectType" : "ExecPort",
      "name" : "bodyB",
      "nodePortType" : "Out",
      "execPortType" : "In",
      "typeSpec" : "Bt2RigidBody"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
        },
      "name" : "pivotA",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Vec3" : {
          "x" : 1,
          "y" : 0,
          "z" : 0
          }
        },
      "execPortType" : "In",
      "typeSpec" : "Vec3"
      },
    {
      "objectType" : "ExecPort",
      "metadata" : {
        "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
        },
      "name" : "pivotB",
      "nodePortType" : "Out",
      "defaultValues" : {
        "Vec3" : {
          "x" : -1,
          "y" : 0,
          "z" : 0
          }
        },
      "execPortType" : "In",
      "typeSpec" : "Vec3"
      },
    {
      "objectType" : "ExecPort",
      "name" : "result",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Bt2Constraint"
      }
    ],
  "extDeps" : {
    "Bullet2Wrapper" : "*"
    },
  "presetGUID" : "D909112C18908BD5948A8DF4F2846DE3",
  "code" : "require Bullet2Wrapper;

dfgEntry {
  result = this.addPoint2PointConstraint(bodyA, bodyB, pivotA, pivotB);
}
"
  }