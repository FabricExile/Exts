//
// Copyright (c) 2010-2017 Fabric Software Inc. All rights reserved.
//

/**
The Exporter interface is used to define a generic exporter type.
Spezialized classes such as the BaseExporter or the AlembicExporter use it
to provide a generic mechanism for exporting files.

\seealso BaseExporter, AlembicExporter

\dfgPresetCreate
*/
interface Exporter
{
  /**
  Adds objects to the export
  \dfgPresetCreate
  \dfgPresetTitle updateObjects
  \dfgPresetFolder Exporter
  */
  Boolean updateObjects!(ExporterContext ctxt, Ref<ImporterObject> objects[]);
  /**
  Saves the file to disk
  \dfgPresetCreate
  \dfgPresetTitle exportToDisk
  \dfgPresetFolder Exporter
  */
  Boolean exportToDisk!(ExporterContext ctxt);
  /**
  Returns they lookup key for a single object. This can be used to define
  if an object is unique based on its ID or path, for example.
  \dfgPresetOmit
  */
  protected String getLookupKey(Ref<ImporterObject> obj);
  /**
  Returns true if an object is supposed to be traversed
  \dfgPresetOmit
  */
  protected String shouldTraverse(Ref<ImporterObject> obj);
  /**
  Gets called for every object to export. This needs to be overloaded by each implementation.
  \dfgPresetOmit
  */
  protected Boolean visitObjectToExport!(ExporterContext ctxt, Ref<ImporterObject> obj, Ref<ImporterObject> parentObj);
};

