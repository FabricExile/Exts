//
// Copyright (c) 2010-2017 Fabric Software Inc. All rights reserved.
//

/**
The ImporterTexture represents an imported texture. The ImporterTexture provides
access to file path of the texture as well as additional settings which may be
used when rendering the texture.
\dfgPresetOmit
*/
object ImporterTexture : ImporterObject permits Importer
{
};

/// \dfgPresetOmit
function ImporterTexture(String id, String path) {
  this.initialize(id, path, 'Texture');
}

/// \dfgPresetOmit
protected function ImporterTexture.initialize!(String id, String path, String type) {
  this.parent.initialize(id, path, type);
  this.initProperty('filePath', ImporterString(''));
  this.initProperty("swapUV", ImporterBoolean(false));
  this.initProperty("scale", ImporterVec2(Vec2(1.0, 1.0)));
  this.initProperty("translation", ImporterVec2(Vec2(0.0, 0.0)));
  this.initProperty("rotation", ImporterScalar(0.0));
  this.initProperty("cropL", ImporterInteger(0));
  this.initProperty("cropR", ImporterInteger(0));
  this.initProperty("cropT", ImporterInteger(0));
  this.initProperty("cropB", ImporterInteger(0));
}

/// \dfgPresetOmit
function String ImporterTexture.getFilePath(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('filePath', context);
  return mutableThis.getStringProperty('filePath');
}

/// \dfgPresetOmit
function ImporterTexture.setFilePath!(String filePath) {
  this.setProperty('filePath', filePath);
}

/// \dfgPresetOmit
function Boolean ImporterTexture.getSwapUV(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('swapUV', context);
  return mutableThis.getBooleanProperty('swapUV');
}

/// \dfgPresetOmit
function ImporterTexture.setSwapUV!(Boolean swapUV) {
  this.setProperty('swapUV', swapUV);
}

/// \dfgPresetOmit
function Vec2 ImporterTexture.getScale(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('scale', context);
  return mutableThis.getVec2Property('scale');
}

/// \dfgPresetOmit
function ImporterTexture.setScale!(Vec2 scale) {
  this.setProperty('scale', scale);
}

/// \dfgPresetOmit
function Vec2 ImporterTexture.getTranslation(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('translation', context);
  return mutableThis.getVec2Property('translation');
}

/// \dfgPresetOmit
function ImporterTexture.setTranslation!(Vec2 translation) {
  this.setProperty('translation', translation);
}

/// \dfgPresetOmit
function Scalar ImporterTexture.getRotation(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('rotation', context);
  return mutableThis.getScalarProperty('rotation');
}

/// \dfgPresetOmit
function ImporterTexture.setRotation!(Scalar rotation) {
  this.setProperty('rotation', rotation);
}

/// \dfgPresetOmit
function Integer ImporterTexture.getCropL(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('cropL', context);
  return mutableThis.getIntegerProperty('cropL');
}

/// \dfgPresetOmit
function ImporterTexture.setCropL!(Integer cropL) {
  this.setProperty('cropL', cropL);
}

/// \dfgPresetOmit
function Integer ImporterTexture.getCropR(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('cropR', context);
  return mutableThis.getIntegerProperty('cropR');
}

/// \dfgPresetOmit
function ImporterTexture.setCropR!(Integer cropR) {
  this.setProperty('cropR', cropR);
}

/// \dfgPresetOmit
function Integer ImporterTexture.getCropT(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('cropT', context);
  return mutableThis.getIntegerProperty('cropT');
}

/// \dfgPresetOmit
function ImporterTexture.setCropT!(Integer cropT) {
  this.setProperty('cropT', cropT);
}

/// \dfgPresetOmit
function Integer ImporterTexture.getCropB(ImporterContext context) {
  Ref<ImporterObject> mutableThis = this;
  mutableThis.updateProperty('cropB', context);
  return mutableThis.getIntegerProperty('cropB');
}

/// \dfgPresetOmit
function ImporterTexture.setCropB!(Integer cropB) {
  this.setProperty('cropB', cropB);
}
